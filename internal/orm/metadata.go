package orm

// ModelMetadata contains all the metadata needed for ORM operations
// This will be generated at compile time instead of parsed at runtime
type ModelMetadata struct {
	// Basic table information
	TableName  string
	StructName string

	// Column mappings
	Columns    map[string]*ColumnMetadata // key is Go field name
	ColumnMap  map[string]string          // Go field -> DB column
	ReverseMap map[string]string          // DB column -> Go field

	// Primary keys only - other column lists are determined dynamically
	PrimaryKeys []string // DB column names

	// Relationships
	Relationships map[string]*RelationshipMetadata
}

// ColumnMetadata contains metadata for a single column
type ColumnMetadata struct {
	FieldName       string              // Go struct field name
	DBName          string              // Database column name
	DBType          string              // Database type
	GoType          string              // Go type
	IsPrimaryKey    bool                // Is this a primary key?
	IsAutoGenerated bool                // Is this auto-generated (serial, default:now(), etc)?
	IsNullable      bool                // Can this be NULL?
	IsUnique        bool                // Has unique constraint?
	IsPointer       bool                // Is this a pointer field in Go struct?
	Default         string              // Default value
	Tags            map[string]string   // All dbdef tags
	Constraints     []string            // Check constraints
	ForeignKey      *ForeignKeyMetadata // Foreign key info if applicable

	// Generated accessor functions for zero-reflection field access
	GetValue func(model interface{}) interface{} // Extract field value (handles pointer dereferencing)
	IsNil    func(model interface{}) bool        // Check if pointer field is nil (only for pointer fields)
}

// ForeignKeyMetadata contains foreign key information
type ForeignKeyMetadata struct {
	ReferencedTable  string
	ReferencedColumn string
	OnDelete         string
	OnUpdate         string
}

// RelationshipMetadata contains relationship information
type RelationshipMetadata struct {
	Name       string
	Type       string // belongs_to, has_one, has_many, has_many_through
	Target     string // Target model name
	ForeignKey string // Foreign key field
	TargetKey  string // Target key field (for belongs_to)
	SourceKey  string // Source key field (for has_one/has_many)
	Through    string // Through model (for has_many_through)
	ThroughFK  string // Through foreign key
	ThroughTK  string // Through target key

	// Generated accessor functions for relationships
	SetValue func(model interface{}, value interface{}) // Set relationship value
	IsSlice  bool                                       // Whether this is a slice relationship
}
