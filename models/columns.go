//go:build !exclude_generated
// +build !exclude_generated

// Code generated by storm orm generate-orm; DO NOT EDIT.
//
// This file was automatically generated from Go struct definitions.
// Any changes made to this file will be lost when regenerating.
//
// Source package: models
// Models found: 15
// Generated on: 2025-07-16 21:12:15 CEST
//
// To regenerate this file, run:
//   storm orm generate-orm --package=models
//
// For more information, see:
//   https://github.com/eleven-am/storm

package models

import (
	"github.com/eleven-am/storm/internal/orm"
	"time"
)

// ApiKeys provides type-safe column references for ApiKey
var ApiKeys = struct {
	Id orm.StringColumn `json:"id"`

	ProjectId orm.StringColumn `json:"project_id"`

	Name orm.StringColumn `json:"name"`

	KeyPrefix orm.StringColumn `json:"key_prefix"`

	SecretHash orm.StringColumn `json:"secret_hash"`

	Permissions orm.StringColumn `json:"permissions"`

	LastUsedAt orm.TimeColumn `json:"last_used_at"`

	ExpiresAt orm.TimeColumn `json:"expires_at"`

	CreatedAt orm.TimeColumn `json:"created_at"`

	UpdatedAt orm.TimeColumn `json:"updated_at"`
}{

	Id: orm.StringColumn{Column: orm.Column[string]{Name: "id", Table: "api_keys"}},

	ProjectId: orm.StringColumn{Column: orm.Column[string]{Name: "project_id", Table: "api_keys"}},

	Name: orm.StringColumn{Column: orm.Column[string]{Name: "name", Table: "api_keys"}},

	KeyPrefix: orm.StringColumn{Column: orm.Column[string]{Name: "key_prefix", Table: "api_keys"}},

	SecretHash: orm.StringColumn{Column: orm.Column[string]{Name: "secret_hash", Table: "api_keys"}},

	Permissions: orm.StringColumn{Column: orm.Column[string]{Name: "permissions", Table: "api_keys"}},

	LastUsedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "last_used_at", Table: "api_keys"}}},

	ExpiresAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "expires_at", Table: "api_keys"}}},

	CreatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "created_at", Table: "api_keys"}}},

	UpdatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "updated_at", Table: "api_keys"}}},
}

// ApiKeyTable provides table-level operations for ApiKey
var ApiKeyTable = orm.Table{
	Name:        "api_keys",
	PrimaryKeys: []string{"id"},
}

// AuditLogs provides type-safe column references for AuditLog
var AuditLogs = struct {
	Id orm.StringColumn `json:"id"`

	TeamId orm.StringColumn `json:"team_id"`

	UserId orm.StringColumn `json:"user_id"`

	Action orm.StringColumn `json:"action"`

	EntityType orm.StringColumn `json:"entity_type"`

	EntityId orm.StringColumn `json:"entity_id"`

	Success orm.BoolColumn `json:"success"`

	ErrorMessage orm.StringColumn `json:"error_message"`

	IpAddress orm.StringColumn `json:"ip_address"`

	UserAgent orm.StringColumn `json:"user_agent"`

	ApiKeyId orm.StringColumn `json:"api_key_id"`

	CorrelationId orm.StringColumn `json:"correlation_id"`

	CreatedAt orm.TimeColumn `json:"created_at"`
}{

	Id: orm.StringColumn{Column: orm.Column[string]{Name: "id", Table: "audit_logs"}},

	TeamId: orm.StringColumn{Column: orm.Column[string]{Name: "team_id", Table: "audit_logs"}},

	UserId: orm.StringColumn{Column: orm.Column[string]{Name: "user_id", Table: "audit_logs"}},

	Action: orm.StringColumn{Column: orm.Column[string]{Name: "action", Table: "audit_logs"}},

	EntityType: orm.StringColumn{Column: orm.Column[string]{Name: "entity_type", Table: "audit_logs"}},

	EntityId: orm.StringColumn{Column: orm.Column[string]{Name: "entity_id", Table: "audit_logs"}},

	Success: orm.BoolColumn{Column: orm.Column[bool]{Name: "success", Table: "audit_logs"}},

	ErrorMessage: orm.StringColumn{Column: orm.Column[string]{Name: "error_message", Table: "audit_logs"}},

	IpAddress: orm.StringColumn{Column: orm.Column[string]{Name: "ip_address", Table: "audit_logs"}},

	UserAgent: orm.StringColumn{Column: orm.Column[string]{Name: "user_agent", Table: "audit_logs"}},

	ApiKeyId: orm.StringColumn{Column: orm.Column[string]{Name: "api_key_id", Table: "audit_logs"}},

	CorrelationId: orm.StringColumn{Column: orm.Column[string]{Name: "correlation_id", Table: "audit_logs"}},

	CreatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "created_at", Table: "audit_logs"}}},
}

// AuditLogTable provides table-level operations for AuditLog
var AuditLogTable = orm.Table{
	Name:        "audit_logs",
	PrimaryKeys: []string{"id"},
}

// AuthCredentials provides type-safe column references for AuthCredential
var AuthCredentials = struct {
	Id orm.StringColumn `json:"id"`

	ProjectId orm.StringColumn `json:"project_id"`

	type_ orm.StringColumn `json:"type"`

	Name orm.StringColumn `json:"name"`

	Headers orm.StringColumn `json:"headers"`

	ExpiresAt orm.TimeColumn `json:"expires_at"`

	Description orm.StringColumn `json:"description"`

	CreatedAt orm.TimeColumn `json:"created_at"`

	UpdatedAt orm.TimeColumn `json:"updated_at"`
}{

	Id: orm.StringColumn{Column: orm.Column[string]{Name: "id", Table: "auth_credentials"}},

	ProjectId: orm.StringColumn{Column: orm.Column[string]{Name: "project_id", Table: "auth_credentials"}},

	type_: orm.StringColumn{Column: orm.Column[string]{Name: "type", Table: "auth_credentials"}},

	Name: orm.StringColumn{Column: orm.Column[string]{Name: "name", Table: "auth_credentials"}},

	Headers: orm.StringColumn{Column: orm.Column[string]{Name: "headers", Table: "auth_credentials"}},

	ExpiresAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "expires_at", Table: "auth_credentials"}}},

	Description: orm.StringColumn{Column: orm.Column[string]{Name: "description", Table: "auth_credentials"}},

	CreatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "created_at", Table: "auth_credentials"}}},

	UpdatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "updated_at", Table: "auth_credentials"}}},
}

// AuthCredentialTable provides table-level operations for AuthCredential
var AuthCredentialTable = orm.Table{
	Name:        "auth_credentials",
	PrimaryKeys: []string{"id"},
}

// Brokers provides type-safe column references for Broker
var Brokers = struct {
	Id orm.StringColumn `json:"id"`

	ProjectId orm.StringColumn `json:"project_id"`

	Name orm.StringColumn `json:"name"`

	type_ orm.StringColumn `json:"type"`

	Description orm.StringColumn `json:"description"`

	IsActive orm.BoolColumn `json:"is_active"`

	Config orm.StringColumn `json:"config"`

	CreatedAt orm.TimeColumn `json:"created_at"`

	UpdatedAt orm.TimeColumn `json:"updated_at"`
}{

	Id: orm.StringColumn{Column: orm.Column[string]{Name: "id", Table: "brokers"}},

	ProjectId: orm.StringColumn{Column: orm.Column[string]{Name: "project_id", Table: "brokers"}},

	Name: orm.StringColumn{Column: orm.Column[string]{Name: "name", Table: "brokers"}},

	type_: orm.StringColumn{Column: orm.Column[string]{Name: "type", Table: "brokers"}},

	Description: orm.StringColumn{Column: orm.Column[string]{Name: "description", Table: "brokers"}},

	IsActive: orm.BoolColumn{Column: orm.Column[bool]{Name: "is_active", Table: "brokers"}},

	Config: orm.StringColumn{Column: orm.Column[string]{Name: "config", Table: "brokers"}},

	CreatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "created_at", Table: "brokers"}}},

	UpdatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "updated_at", Table: "brokers"}}},
}

// BrokerTable provides table-level operations for Broker
var BrokerTable = orm.Table{
	Name:        "brokers",
	PrimaryKeys: []string{"id"},
}

// DlqMessages provides type-safe column references for DlqMessage
var DlqMessages = struct {
	Id orm.StringColumn `json:"id"`

	MessageId orm.StringColumn `json:"message_id"`

	PipelineId orm.StringColumn `json:"pipeline_id"`

	TriggerId orm.StringColumn `json:"trigger_id"`

	Queue orm.StringColumn `json:"queue"`

	RoutingKey orm.StringColumn `json:"routing_key"`

	Headers orm.StringColumn `json:"headers"`

	Body orm.Column[interface{}] `json:"body"`

	ErrorMessage orm.StringColumn `json:"error_message"`

	FailureCount orm.NumericColumn[int32] `json:"failure_count"`

	FirstFailure orm.TimeColumn `json:"first_failure"`

	LastFailure orm.TimeColumn `json:"last_failure"`

	NextRetry orm.TimeColumn `json:"next_retry"`

	Status orm.StringColumn `json:"status"`

	Metadata orm.StringColumn `json:"metadata"`

	CreatedAt orm.TimeColumn `json:"created_at"`

	UpdatedAt orm.TimeColumn `json:"updated_at"`
}{

	Id: orm.StringColumn{Column: orm.Column[string]{Name: "id", Table: "dlq_messages"}},

	MessageId: orm.StringColumn{Column: orm.Column[string]{Name: "message_id", Table: "dlq_messages"}},

	PipelineId: orm.StringColumn{Column: orm.Column[string]{Name: "pipeline_id", Table: "dlq_messages"}},

	TriggerId: orm.StringColumn{Column: orm.Column[string]{Name: "trigger_id", Table: "dlq_messages"}},

	Queue: orm.StringColumn{Column: orm.Column[string]{Name: "queue", Table: "dlq_messages"}},

	RoutingKey: orm.StringColumn{Column: orm.Column[string]{Name: "routing_key", Table: "dlq_messages"}},

	Headers: orm.StringColumn{Column: orm.Column[string]{Name: "headers", Table: "dlq_messages"}},

	Body: orm.Column[interface{}]{Name: "body", Table: "dlq_messages"},

	ErrorMessage: orm.StringColumn{Column: orm.Column[string]{Name: "error_message", Table: "dlq_messages"}},

	FailureCount: orm.NumericColumn[int32]{ComparableColumn: orm.ComparableColumn[int32]{Column: orm.Column[int32]{Name: "failure_count", Table: "dlq_messages"}}},

	FirstFailure: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "first_failure", Table: "dlq_messages"}}},

	LastFailure: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "last_failure", Table: "dlq_messages"}}},

	NextRetry: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "next_retry", Table: "dlq_messages"}}},

	Status: orm.StringColumn{Column: orm.Column[string]{Name: "status", Table: "dlq_messages"}},

	Metadata: orm.StringColumn{Column: orm.Column[string]{Name: "metadata", Table: "dlq_messages"}},

	CreatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "created_at", Table: "dlq_messages"}}},

	UpdatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "updated_at", Table: "dlq_messages"}}},
}

// DlqMessageTable provides table-level operations for DlqMessage
var DlqMessageTable = orm.Table{
	Name:        "dlq_messages",
	PrimaryKeys: []string{"id"},
}

// ExecutionLogs provides type-safe column references for ExecutionLog
var ExecutionLogs = struct {
	Id orm.StringColumn `json:"id"`

	ProjectId orm.StringColumn `json:"project_id"`

	CorrelationId orm.StringColumn `json:"correlation_id"`

	TriggerId orm.StringColumn `json:"trigger_id"`

	PipelineId orm.StringColumn `json:"pipeline_id"`

	Status orm.StringColumn `json:"status"`

	StartedAt orm.TimeColumn `json:"started_at"`

	CompletedAt orm.TimeColumn `json:"completed_at"`

	DurationMs orm.NumericColumn[int64] `json:"duration_ms"`

	InputData orm.StringColumn `json:"input_data"`

	OutputData orm.StringColumn `json:"output_data"`

	ErrorDetails orm.StringColumn `json:"error_details"`

	Metadata orm.StringColumn `json:"metadata"`

	CreatedAt orm.TimeColumn `json:"created_at"`

	EventSummary orm.StringColumn `json:"event_summary"`

	StageEvents orm.StringColumn `json:"stage_events"`

	TotalEvents orm.NumericColumn[int32] `json:"total_events"`
}{

	Id: orm.StringColumn{Column: orm.Column[string]{Name: "id", Table: "execution_logs"}},

	ProjectId: orm.StringColumn{Column: orm.Column[string]{Name: "project_id", Table: "execution_logs"}},

	CorrelationId: orm.StringColumn{Column: orm.Column[string]{Name: "correlation_id", Table: "execution_logs"}},

	TriggerId: orm.StringColumn{Column: orm.Column[string]{Name: "trigger_id", Table: "execution_logs"}},

	PipelineId: orm.StringColumn{Column: orm.Column[string]{Name: "pipeline_id", Table: "execution_logs"}},

	Status: orm.StringColumn{Column: orm.Column[string]{Name: "status", Table: "execution_logs"}},

	StartedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "started_at", Table: "execution_logs"}}},

	CompletedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "completed_at", Table: "execution_logs"}}},

	DurationMs: orm.NumericColumn[int64]{ComparableColumn: orm.ComparableColumn[int64]{Column: orm.Column[int64]{Name: "duration_ms", Table: "execution_logs"}}},

	InputData: orm.StringColumn{Column: orm.Column[string]{Name: "input_data", Table: "execution_logs"}},

	OutputData: orm.StringColumn{Column: orm.Column[string]{Name: "output_data", Table: "execution_logs"}},

	ErrorDetails: orm.StringColumn{Column: orm.Column[string]{Name: "error_details", Table: "execution_logs"}},

	Metadata: orm.StringColumn{Column: orm.Column[string]{Name: "metadata", Table: "execution_logs"}},

	CreatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "created_at", Table: "execution_logs"}}},

	EventSummary: orm.StringColumn{Column: orm.Column[string]{Name: "event_summary", Table: "execution_logs"}},

	StageEvents: orm.StringColumn{Column: orm.Column[string]{Name: "stage_events", Table: "execution_logs"}},

	TotalEvents: orm.NumericColumn[int32]{ComparableColumn: orm.ComparableColumn[int32]{Column: orm.Column[int32]{Name: "total_events", Table: "execution_logs"}}},
}

// ExecutionLogTable provides table-level operations for ExecutionLog
var ExecutionLogTable = orm.Table{
	Name:        "execution_logs",
	PrimaryKeys: []string{"id"},
}

// OauthTokens provides type-safe column references for OauthToken
var OauthTokens = struct {
	Id orm.StringColumn `json:"id"`

	ProjectId orm.StringColumn `json:"project_id"`

	Service orm.StringColumn `json:"service"`

	Purpose orm.StringColumn `json:"purpose"`

	RedirectUrl orm.StringColumn `json:"redirect_url"`

	ClientId orm.StringColumn `json:"client_id"`

	ClientSecret orm.StringColumn `json:"client_secret"`

	AccessToken orm.StringColumn `json:"access_token"`

	RefreshToken orm.StringColumn `json:"refresh_token"`

	TokenType orm.StringColumn `json:"token_type"`

	IdToken orm.StringColumn `json:"id_token"`

	ExpiresAt orm.TimeColumn `json:"expires_at"`

	LastRefreshedAt orm.TimeColumn `json:"last_refreshed_at"`

	Scopes orm.StringColumn `json:"scopes"`

	Email orm.StringColumn `json:"email"`

	Metadata orm.StringColumn `json:"metadata"`

	Config orm.StringColumn `json:"config"`

	CreatedAt orm.TimeColumn `json:"created_at"`

	UpdatedAt orm.TimeColumn `json:"updated_at"`
}{

	Id: orm.StringColumn{Column: orm.Column[string]{Name: "id", Table: "oauth_tokens"}},

	ProjectId: orm.StringColumn{Column: orm.Column[string]{Name: "project_id", Table: "oauth_tokens"}},

	Service: orm.StringColumn{Column: orm.Column[string]{Name: "service", Table: "oauth_tokens"}},

	Purpose: orm.StringColumn{Column: orm.Column[string]{Name: "purpose", Table: "oauth_tokens"}},

	RedirectUrl: orm.StringColumn{Column: orm.Column[string]{Name: "redirect_url", Table: "oauth_tokens"}},

	ClientId: orm.StringColumn{Column: orm.Column[string]{Name: "client_id", Table: "oauth_tokens"}},

	ClientSecret: orm.StringColumn{Column: orm.Column[string]{Name: "client_secret", Table: "oauth_tokens"}},

	AccessToken: orm.StringColumn{Column: orm.Column[string]{Name: "access_token", Table: "oauth_tokens"}},

	RefreshToken: orm.StringColumn{Column: orm.Column[string]{Name: "refresh_token", Table: "oauth_tokens"}},

	TokenType: orm.StringColumn{Column: orm.Column[string]{Name: "token_type", Table: "oauth_tokens"}},

	IdToken: orm.StringColumn{Column: orm.Column[string]{Name: "id_token", Table: "oauth_tokens"}},

	ExpiresAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "expires_at", Table: "oauth_tokens"}}},

	LastRefreshedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "last_refreshed_at", Table: "oauth_tokens"}}},

	Scopes: orm.StringColumn{Column: orm.Column[string]{Name: "scopes", Table: "oauth_tokens"}},

	Email: orm.StringColumn{Column: orm.Column[string]{Name: "email", Table: "oauth_tokens"}},

	Metadata: orm.StringColumn{Column: orm.Column[string]{Name: "metadata", Table: "oauth_tokens"}},

	Config: orm.StringColumn{Column: orm.Column[string]{Name: "config", Table: "oauth_tokens"}},

	CreatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "created_at", Table: "oauth_tokens"}}},

	UpdatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "updated_at", Table: "oauth_tokens"}}},
}

// OauthTokenTable provides table-level operations for OauthToken
var OauthTokenTable = orm.Table{
	Name:        "oauth_tokens",
	PrimaryKeys: []string{"id"},
}

// Pipelines provides type-safe column references for Pipeline
var Pipelines = struct {
	Id orm.StringColumn `json:"id"`

	ProjectId orm.StringColumn `json:"project_id"`

	Name orm.StringColumn `json:"name"`

	Description orm.StringColumn `json:"description"`

	Version orm.StringColumn `json:"version"`

	IsActive orm.BoolColumn `json:"is_active"`

	DlqBrokerId orm.StringColumn `json:"dlq_broker_id"`

	Metadata orm.StringColumn `json:"metadata"`

	Config orm.StringColumn `json:"config"`

	CreatedAt orm.TimeColumn `json:"created_at"`

	UpdatedAt orm.TimeColumn `json:"updated_at"`
}{

	Id: orm.StringColumn{Column: orm.Column[string]{Name: "id", Table: "pipelines"}},

	ProjectId: orm.StringColumn{Column: orm.Column[string]{Name: "project_id", Table: "pipelines"}},

	Name: orm.StringColumn{Column: orm.Column[string]{Name: "name", Table: "pipelines"}},

	Description: orm.StringColumn{Column: orm.Column[string]{Name: "description", Table: "pipelines"}},

	Version: orm.StringColumn{Column: orm.Column[string]{Name: "version", Table: "pipelines"}},

	IsActive: orm.BoolColumn{Column: orm.Column[bool]{Name: "is_active", Table: "pipelines"}},

	DlqBrokerId: orm.StringColumn{Column: orm.Column[string]{Name: "dlq_broker_id", Table: "pipelines"}},

	Metadata: orm.StringColumn{Column: orm.Column[string]{Name: "metadata", Table: "pipelines"}},

	Config: orm.StringColumn{Column: orm.Column[string]{Name: "config", Table: "pipelines"}},

	CreatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "created_at", Table: "pipelines"}}},

	UpdatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "updated_at", Table: "pipelines"}}},
}

// PipelineTable provides table-level operations for Pipeline
var PipelineTable = orm.Table{
	Name:        "pipelines",
	PrimaryKeys: []string{"id"},
}

// PipelineEvents provides type-safe column references for PipelineEvent
var PipelineEvents = struct {
	Timestamp orm.TimeColumn `json:"timestamp"`

	CreatedAt orm.TimeColumn `json:"created_at"`

	MemoryUsageBytes orm.NumericColumn[int64] `json:"memory_usage_bytes"`

	DurationMs orm.NumericColumn[int64] `json:"duration_ms"`

	StageLevel orm.NumericColumn[int32] `json:"stage_level"`

	StageType orm.StringColumn `json:"stage_type"`

	EventVersion orm.StringColumn `json:"event_version"`

	StageId orm.StringColumn `json:"stage_id"`

	Id orm.StringColumn `json:"id"`

	EventType orm.StringColumn `json:"event_type"`

	Status orm.StringColumn `json:"status"`

	InputData orm.StringColumn `json:"input_data"`

	OutputData orm.StringColumn `json:"output_data"`

	ErrorDetails orm.StringColumn `json:"error_details"`

	Metadata orm.StringColumn `json:"metadata"`

	ProjectId orm.StringColumn `json:"project_id"`

	PipelineId orm.StringColumn `json:"pipeline_id"`

	ExecutionId orm.StringColumn `json:"execution_id"`
}{

	Timestamp: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "timestamp", Table: "pipeline_events"}}},

	CreatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "created_at", Table: "pipeline_events"}}},

	MemoryUsageBytes: orm.NumericColumn[int64]{ComparableColumn: orm.ComparableColumn[int64]{Column: orm.Column[int64]{Name: "memory_usage_bytes", Table: "pipeline_events"}}},

	DurationMs: orm.NumericColumn[int64]{ComparableColumn: orm.ComparableColumn[int64]{Column: orm.Column[int64]{Name: "duration_ms", Table: "pipeline_events"}}},

	StageLevel: orm.NumericColumn[int32]{ComparableColumn: orm.ComparableColumn[int32]{Column: orm.Column[int32]{Name: "stage_level", Table: "pipeline_events"}}},

	StageType: orm.StringColumn{Column: orm.Column[string]{Name: "stage_type", Table: "pipeline_events"}},

	EventVersion: orm.StringColumn{Column: orm.Column[string]{Name: "event_version", Table: "pipeline_events"}},

	StageId: orm.StringColumn{Column: orm.Column[string]{Name: "stage_id", Table: "pipeline_events"}},

	Id: orm.StringColumn{Column: orm.Column[string]{Name: "id", Table: "pipeline_events"}},

	EventType: orm.StringColumn{Column: orm.Column[string]{Name: "event_type", Table: "pipeline_events"}},

	Status: orm.StringColumn{Column: orm.Column[string]{Name: "status", Table: "pipeline_events"}},

	InputData: orm.StringColumn{Column: orm.Column[string]{Name: "input_data", Table: "pipeline_events"}},

	OutputData: orm.StringColumn{Column: orm.Column[string]{Name: "output_data", Table: "pipeline_events"}},

	ErrorDetails: orm.StringColumn{Column: orm.Column[string]{Name: "error_details", Table: "pipeline_events"}},

	Metadata: orm.StringColumn{Column: orm.Column[string]{Name: "metadata", Table: "pipeline_events"}},

	ProjectId: orm.StringColumn{Column: orm.Column[string]{Name: "project_id", Table: "pipeline_events"}},

	PipelineId: orm.StringColumn{Column: orm.Column[string]{Name: "pipeline_id", Table: "pipeline_events"}},

	ExecutionId: orm.StringColumn{Column: orm.Column[string]{Name: "execution_id", Table: "pipeline_events"}},
}

// PipelineEventTable provides table-level operations for PipelineEvent
var PipelineEventTable = orm.Table{
	Name:        "pipeline_events",
	PrimaryKeys: []string{"id"},
}

// Projects provides type-safe column references for Project
var Projects = struct {
	Id orm.StringColumn `json:"id"`

	TeamId orm.StringColumn `json:"team_id"`

	Name orm.StringColumn `json:"name"`

	CreatedAt orm.TimeColumn `json:"created_at"`

	UpdatedAt orm.TimeColumn `json:"updated_at"`
}{

	Id: orm.StringColumn{Column: orm.Column[string]{Name: "id", Table: "projects"}},

	TeamId: orm.StringColumn{Column: orm.Column[string]{Name: "team_id", Table: "projects"}},

	Name: orm.StringColumn{Column: orm.Column[string]{Name: "name", Table: "projects"}},

	CreatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "created_at", Table: "projects"}}},

	UpdatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "updated_at", Table: "projects"}}},
}

// ProjectTable provides table-level operations for Project
var ProjectTable = orm.Table{
	Name:        "projects",
	PrimaryKeys: []string{"id"},
}

// Stages provides type-safe column references for Stage
var Stages = struct {
	Id orm.StringColumn `json:"id"`

	PipelineId orm.StringColumn `json:"pipeline_id"`

	StageId orm.StringColumn `json:"stage_id"`

	type_ orm.StringColumn `json:"type"`

	Action orm.StringColumn `json:"action"`

	Target orm.StringColumn `json:"target"`

	DependsOn orm.StringColumn `json:"depends_on"`

	Filter orm.StringColumn `json:"filter"`

	Timeout orm.Column[interface{}] `json:"timeout"`

	CacheConfig orm.StringColumn `json:"cache_config"`

	CreatedAt orm.TimeColumn `json:"created_at"`

	UpdatedAt orm.TimeColumn `json:"updated_at"`
}{

	Id: orm.StringColumn{Column: orm.Column[string]{Name: "id", Table: "stages"}},

	PipelineId: orm.StringColumn{Column: orm.Column[string]{Name: "pipeline_id", Table: "stages"}},

	StageId: orm.StringColumn{Column: orm.Column[string]{Name: "stage_id", Table: "stages"}},

	type_: orm.StringColumn{Column: orm.Column[string]{Name: "type", Table: "stages"}},

	Action: orm.StringColumn{Column: orm.Column[string]{Name: "action", Table: "stages"}},

	Target: orm.StringColumn{Column: orm.Column[string]{Name: "target", Table: "stages"}},

	DependsOn: orm.StringColumn{Column: orm.Column[string]{Name: "depends_on", Table: "stages"}},

	Filter: orm.StringColumn{Column: orm.Column[string]{Name: "filter", Table: "stages"}},

	Timeout: orm.Column[interface{}]{Name: "timeout", Table: "stages"},

	CacheConfig: orm.StringColumn{Column: orm.Column[string]{Name: "cache_config", Table: "stages"}},

	CreatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "created_at", Table: "stages"}}},

	UpdatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "updated_at", Table: "stages"}}},
}

// StageTable provides table-level operations for Stage
var StageTable = orm.Table{
	Name:        "stages",
	PrimaryKeys: []string{"id"},
}

// Subscriptions provides type-safe column references for Subscription
var Subscriptions = struct {
	Id orm.StringColumn `json:"id"`

	PlanId orm.StringColumn `json:"plan_id"`

	TeamId orm.StringColumn `json:"team_id"`

	Active orm.BoolColumn `json:"active"`

	ExpiresAt orm.TimeColumn `json:"expires_at"`

	CreatedAt orm.TimeColumn `json:"created_at"`

	UpdatedAt orm.TimeColumn `json:"updated_at"`
}{

	Id: orm.StringColumn{Column: orm.Column[string]{Name: "id", Table: "subscriptions"}},

	PlanId: orm.StringColumn{Column: orm.Column[string]{Name: "plan_id", Table: "subscriptions"}},

	TeamId: orm.StringColumn{Column: orm.Column[string]{Name: "team_id", Table: "subscriptions"}},

	Active: orm.BoolColumn{Column: orm.Column[bool]{Name: "active", Table: "subscriptions"}},

	ExpiresAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "expires_at", Table: "subscriptions"}}},

	CreatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "created_at", Table: "subscriptions"}}},

	UpdatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "updated_at", Table: "subscriptions"}}},
}

// SubscriptionTable provides table-level operations for Subscription
var SubscriptionTable = orm.Table{
	Name:        "subscriptions",
	PrimaryKeys: []string{"id"},
}

// Teams provides type-safe column references for Team
var Teams = struct {
	Id orm.StringColumn `json:"id"`

	Name orm.StringColumn `json:"name"`

	Slug orm.StringColumn `json:"slug"`

	CreatedAt orm.TimeColumn `json:"created_at"`

	UpdatedAt orm.TimeColumn `json:"updated_at"`
}{

	Id: orm.StringColumn{Column: orm.Column[string]{Name: "id", Table: "teams"}},

	Name: orm.StringColumn{Column: orm.Column[string]{Name: "name", Table: "teams"}},

	Slug: orm.StringColumn{Column: orm.Column[string]{Name: "slug", Table: "teams"}},

	CreatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "created_at", Table: "teams"}}},

	UpdatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "updated_at", Table: "teams"}}},
}

// TeamTable provides table-level operations for Team
var TeamTable = orm.Table{
	Name:        "teams",
	PrimaryKeys: []string{"id"},
}

// Triggers provides type-safe column references for Trigger
var Triggers = struct {
	Id orm.StringColumn `json:"id"`

	ProjectId orm.StringColumn `json:"project_id"`

	PipelineIds orm.StringColumn `json:"pipeline_ids"`

	Name orm.StringColumn `json:"name"`

	type_ orm.StringColumn `json:"type"`

	EntityId orm.StringColumn `json:"entity_id"`

	IsActive orm.BoolColumn `json:"is_active"`

	Config orm.StringColumn `json:"config"`

	AuthConfig orm.StringColumn `json:"auth_config"`

	LastTriggeredAt orm.TimeColumn `json:"last_triggered_at"`

	LastError orm.StringColumn `json:"last_error"`

	TriggerCount orm.NumericColumn[int64] `json:"trigger_count"`

	CreatedAt orm.TimeColumn `json:"created_at"`

	UpdatedAt orm.TimeColumn `json:"updated_at"`
}{

	Id: orm.StringColumn{Column: orm.Column[string]{Name: "id", Table: "triggers"}},

	ProjectId: orm.StringColumn{Column: orm.Column[string]{Name: "project_id", Table: "triggers"}},

	PipelineIds: orm.StringColumn{Column: orm.Column[string]{Name: "pipeline_ids", Table: "triggers"}},

	Name: orm.StringColumn{Column: orm.Column[string]{Name: "name", Table: "triggers"}},

	type_: orm.StringColumn{Column: orm.Column[string]{Name: "type", Table: "triggers"}},

	EntityId: orm.StringColumn{Column: orm.Column[string]{Name: "entity_id", Table: "triggers"}},

	IsActive: orm.BoolColumn{Column: orm.Column[bool]{Name: "is_active", Table: "triggers"}},

	Config: orm.StringColumn{Column: orm.Column[string]{Name: "config", Table: "triggers"}},

	AuthConfig: orm.StringColumn{Column: orm.Column[string]{Name: "auth_config", Table: "triggers"}},

	LastTriggeredAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "last_triggered_at", Table: "triggers"}}},

	LastError: orm.StringColumn{Column: orm.Column[string]{Name: "last_error", Table: "triggers"}},

	TriggerCount: orm.NumericColumn[int64]{ComparableColumn: orm.ComparableColumn[int64]{Column: orm.Column[int64]{Name: "trigger_count", Table: "triggers"}}},

	CreatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "created_at", Table: "triggers"}}},

	UpdatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "updated_at", Table: "triggers"}}},
}

// TriggerTable provides table-level operations for Trigger
var TriggerTable = orm.Table{
	Name:        "triggers",
	PrimaryKeys: []string{"id"},
}

// Users provides type-safe column references for User
var Users = struct {
	Id orm.StringColumn `json:"id"`

	TeamId orm.StringColumn `json:"team_id"`

	Email orm.StringColumn `json:"email"`

	CreatedAt orm.TimeColumn `json:"created_at"`

	UpdatedAt orm.TimeColumn `json:"updated_at"`
}{

	Id: orm.StringColumn{Column: orm.Column[string]{Name: "id", Table: "users"}},

	TeamId: orm.StringColumn{Column: orm.Column[string]{Name: "team_id", Table: "users"}},

	Email: orm.StringColumn{Column: orm.Column[string]{Name: "email", Table: "users"}},

	CreatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "created_at", Table: "users"}}},

	UpdatedAt: orm.TimeColumn{ComparableColumn: orm.ComparableColumn[time.Time]{Column: orm.Column[time.Time]{Name: "updated_at", Table: "users"}}},
}

// UserTable provides table-level operations for User
var UserTable = orm.Table{
	Name:        "users",
	PrimaryKeys: []string{"id"},
}
