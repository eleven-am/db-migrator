//go:build !exclude_generated
// +build !exclude_generated

// Code generated by storm orm generate-orm; DO NOT EDIT.
//
// This file was automatically generated from Go struct definitions.
// Any changes made to this file will be lost when regenerating.
//
// Source package: models
// Model: Team
// Generated on: 2025-07-16 21:12:15 CEST
//
// To regenerate this file, run:
//   storm orm generate-orm --package=models
//
// For more information, see:
//   https://github.com/eleven-am/storm

package models

import (
	"github.com/eleven-am/storm/internal/orm"
)

// TeamMetadata provides compile-time metadata for Team
var TeamMetadata = &orm.ModelMetadata{
	TableName:  "teams",
	StructName: "Team",

	Columns: map[string]*orm.ColumnMetadata{
		"Id": {
			FieldName:       "Id",
			DBName:          "id",
			GoType:          "string",
			IsPointer:       false,
			IsPrimaryKey:    true,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(Team)
				return m.Id
			},
		},
		"Name": {
			FieldName:       "Name",
			DBName:          "name",
			GoType:          "string",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(Team)
				return m.Name
			},
		},
		"Slug": {
			FieldName:       "Slug",
			DBName:          "slug",
			GoType:          "string",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(Team)
				return m.Slug
			},
		},
		"CreatedAt": {
			FieldName:       "CreatedAt",
			DBName:          "created_at",
			GoType:          "time.Time",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: true,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(Team)
				return m.CreatedAt
			},
		},
		"UpdatedAt": {
			FieldName:       "UpdatedAt",
			DBName:          "updated_at",
			GoType:          "time.Time",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: true,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(Team)
				return m.UpdatedAt
			},
		},
	},

	ColumnMap: map[string]string{
		"Id":        "id",
		"Name":      "name",
		"Slug":      "slug",
		"CreatedAt": "created_at",
		"UpdatedAt": "updated_at",
	},

	ReverseMap: map[string]string{
		"id":         "Id",
		"name":       "Name",
		"slug":       "Slug",
		"created_at": "CreatedAt",
		"updated_at": "UpdatedAt",
	},

	PrimaryKeys: []string{
		"id",
	},

	Relationships: map[string]*orm.RelationshipMetadata{
		"Projects": {
			Name:       "Projects",
			Type:       "has_many",
			Target:     "Project",
			ForeignKey: "team_id",
			SourceKey:  "id",

			// Generated accessor functions for relationships
			SetValue: func(model interface{}, value interface{}) {
				model.(*Team).Projects = value.([]Project)
			},
			IsSlice: true,
		},
		"Subscriptions": {
			Name:       "Subscriptions",
			Type:       "has_many",
			Target:     "Subscription",
			ForeignKey: "team_id",
			SourceKey:  "id",

			// Generated accessor functions for relationships
			SetValue: func(model interface{}, value interface{}) {
				model.(*Team).Subscriptions = value.([]Subscription)
			},
			IsSlice: true,
		},
		"Users": {
			Name:       "Users",
			Type:       "has_many",
			Target:     "User",
			ForeignKey: "team_id",
			SourceKey:  "id",

			// Generated accessor functions for relationships
			SetValue: func(model interface{}, value interface{}) {
				model.(*Team).Users = value.([]User)
			},
			IsSlice: true,
		},
		"AuditLogs": {
			Name:       "AuditLogs",
			Type:       "has_many",
			Target:     "AuditLog",
			ForeignKey: "team_id",
			SourceKey:  "id",

			// Generated accessor functions for relationships
			SetValue: func(model interface{}, value interface{}) {
				model.(*Team).AuditLogs = value.([]AuditLog)
			},
			IsSlice: true,
		},
	},
}
