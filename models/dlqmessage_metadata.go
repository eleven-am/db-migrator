//go:build !exclude_generated
// +build !exclude_generated

// Code generated by storm orm generate-orm; DO NOT EDIT.
//
// This file was automatically generated from Go struct definitions.
// Any changes made to this file will be lost when regenerating.
//
// Source package: models
// Model: DlqMessage
// Generated on: 2025-07-16 21:12:15 CEST
//
// To regenerate this file, run:
//   storm orm generate-orm --package=models
//
// For more information, see:
//   https://github.com/eleven-am/storm

package models

import (
	"github.com/eleven-am/storm/internal/orm"
)

// DlqMessageMetadata provides compile-time metadata for DlqMessage
var DlqMessageMetadata = &orm.ModelMetadata{
	TableName:  "dlq_messages",
	StructName: "DlqMessage",

	Columns: map[string]*orm.ColumnMetadata{
		"Id": {
			FieldName:       "Id",
			DBName:          "id",
			GoType:          "string",
			IsPointer:       false,
			IsPrimaryKey:    true,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				return m.Id
			},
		},
		"MessageId": {
			FieldName:       "MessageId",
			DBName:          "message_id",
			GoType:          "string",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				return m.MessageId
			},
		},
		"PipelineId": {
			FieldName:       "PipelineId",
			DBName:          "pipeline_id",
			GoType:          "string",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				return m.PipelineId
			},
		},
		"TriggerId": {
			FieldName:       "TriggerId",
			DBName:          "trigger_id",
			GoType:          "string",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				return m.TriggerId
			},
		},
		"Queue": {
			FieldName:       "Queue",
			DBName:          "queue",
			GoType:          "string",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				return m.Queue
			},
		},
		"RoutingKey": {
			FieldName:       "RoutingKey",
			DBName:          "routing_key",
			GoType:          "string",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				return m.RoutingKey
			},
		},
		"Headers": {
			FieldName:       "Headers",
			DBName:          "headers",
			GoType:          "",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				return m.Headers
			},
		},
		"Body": {
			FieldName:       "Body",
			DBName:          "body",
			GoType:          "byte",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				return m.Body
			},
		},
		"ErrorMessage": {
			FieldName:       "ErrorMessage",
			DBName:          "error_message",
			GoType:          "string",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				return m.ErrorMessage
			},
		},
		"FailureCount": {
			FieldName:       "FailureCount",
			DBName:          "failure_count",
			GoType:          "int32",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				return m.FailureCount
			},
		},
		"FirstFailure": {
			FieldName:       "FirstFailure",
			DBName:          "first_failure",
			GoType:          "time.Time",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: true,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				return m.FirstFailure
			},
		},
		"LastFailure": {
			FieldName:       "LastFailure",
			DBName:          "last_failure",
			GoType:          "time.Time",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: true,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				return m.LastFailure
			},
		},
		"NextRetry": {
			FieldName:       "NextRetry",
			DBName:          "next_retry",
			GoType:          "time.Time",
			IsPointer:       true,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				if m.NextRetry != nil {
					return *m.NextRetry
				}
				return nil
			},
			IsNil: func(model interface{}) bool {
				return model.(DlqMessage).NextRetry == nil
			},
		},
		"Status": {
			FieldName:       "Status",
			DBName:          "status",
			GoType:          "string",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				return m.Status
			},
		},
		"Metadata": {
			FieldName:       "Metadata",
			DBName:          "metadata",
			GoType:          "",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				return m.Metadata
			},
		},
		"CreatedAt": {
			FieldName:       "CreatedAt",
			DBName:          "created_at",
			GoType:          "time.Time",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: true,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				return m.CreatedAt
			},
		},
		"UpdatedAt": {
			FieldName:       "UpdatedAt",
			DBName:          "updated_at",
			GoType:          "time.Time",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: true,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(DlqMessage)
				return m.UpdatedAt
			},
		},
	},

	ColumnMap: map[string]string{
		"Id":           "id",
		"MessageId":    "message_id",
		"PipelineId":   "pipeline_id",
		"TriggerId":    "trigger_id",
		"Queue":        "queue",
		"RoutingKey":   "routing_key",
		"Headers":      "headers",
		"Body":         "body",
		"ErrorMessage": "error_message",
		"FailureCount": "failure_count",
		"FirstFailure": "first_failure",
		"LastFailure":  "last_failure",
		"NextRetry":    "next_retry",
		"Status":       "status",
		"Metadata":     "metadata",
		"CreatedAt":    "created_at",
		"UpdatedAt":    "updated_at",
	},

	ReverseMap: map[string]string{
		"id":            "Id",
		"message_id":    "MessageId",
		"pipeline_id":   "PipelineId",
		"trigger_id":    "TriggerId",
		"queue":         "Queue",
		"routing_key":   "RoutingKey",
		"headers":       "Headers",
		"body":          "Body",
		"error_message": "ErrorMessage",
		"failure_count": "FailureCount",
		"first_failure": "FirstFailure",
		"last_failure":  "LastFailure",
		"next_retry":    "NextRetry",
		"status":        "Status",
		"metadata":      "Metadata",
		"created_at":    "CreatedAt",
		"updated_at":    "UpdatedAt",
	},

	PrimaryKeys: []string{
		"id",
	},

	Relationships: map[string]*orm.RelationshipMetadata{
		"Pipeline": {
			Name:       "Pipeline",
			Type:       "belongs_to",
			Target:     "Pipeline",
			ForeignKey: "pipeline_id",
			TargetKey:  "id",

			// Generated accessor functions for relationships
			SetValue: func(model interface{}, value interface{}) {
				model.(*DlqMessage).Pipeline = value.(*Pipeline)
			},
			IsSlice: false,
		},
		"Trigger": {
			Name:       "Trigger",
			Type:       "belongs_to",
			Target:     "Trigger",
			ForeignKey: "trigger_id",
			TargetKey:  "id",

			// Generated accessor functions for relationships
			SetValue: func(model interface{}, value interface{}) {
				model.(*DlqMessage).Trigger = value.(*Trigger)
			},
			IsSlice: false,
		},
	},
}
