//go:build !exclude_generated
// +build !exclude_generated

// Code generated by storm orm generate-orm; DO NOT EDIT.
//
// This file was automatically generated from Go struct definitions.
// Any changes made to this file will be lost when regenerating.
//
// Source package: models
// Model: AuthCredential
// Generated on: 2025-07-16 21:12:15 CEST
//
// To regenerate this file, run:
//   storm orm generate-orm --package=models
//
// For more information, see:
//   https://github.com/eleven-am/storm

package models

import (
	"github.com/eleven-am/storm/internal/orm"
)

// AuthCredentialMetadata provides compile-time metadata for AuthCredential
var AuthCredentialMetadata = &orm.ModelMetadata{
	TableName:  "auth_credentials",
	StructName: "AuthCredential",

	Columns: map[string]*orm.ColumnMetadata{
		"Id": {
			FieldName:       "Id",
			DBName:          "id",
			GoType:          "string",
			IsPointer:       false,
			IsPrimaryKey:    true,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(AuthCredential)
				return m.Id
			},
		},
		"ProjectId": {
			FieldName:       "ProjectId",
			DBName:          "project_id",
			GoType:          "string",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(AuthCredential)
				return m.ProjectId
			},
		},
		"Type": {
			FieldName:       "Type",
			DBName:          "type",
			GoType:          "string",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(AuthCredential)
				return m.Type
			},
		},
		"Name": {
			FieldName:       "Name",
			DBName:          "name",
			GoType:          "string",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(AuthCredential)
				return m.Name
			},
		},
		"Headers": {
			FieldName:       "Headers",
			DBName:          "headers",
			GoType:          "string",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(AuthCredential)
				return m.Headers
			},
		},
		"ExpiresAt": {
			FieldName:       "ExpiresAt",
			DBName:          "expires_at",
			GoType:          "time.Time",
			IsPointer:       true,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(AuthCredential)
				if m.ExpiresAt != nil {
					return *m.ExpiresAt
				}
				return nil
			},
			IsNil: func(model interface{}) bool {
				return model.(AuthCredential).ExpiresAt == nil
			},
		},
		"Description": {
			FieldName:       "Description",
			DBName:          "description",
			GoType:          "string",
			IsPointer:       true,
			IsPrimaryKey:    false,
			IsAutoGenerated: false,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(AuthCredential)
				if m.Description != nil {
					return *m.Description
				}
				return nil
			},
			IsNil: func(model interface{}) bool {
				return model.(AuthCredential).Description == nil
			},
		},
		"CreatedAt": {
			FieldName:       "CreatedAt",
			DBName:          "created_at",
			GoType:          "time.Time",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: true,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(AuthCredential)
				return m.CreatedAt
			},
		},
		"UpdatedAt": {
			FieldName:       "UpdatedAt",
			DBName:          "updated_at",
			GoType:          "time.Time",
			IsPointer:       false,
			IsPrimaryKey:    false,
			IsAutoGenerated: true,

			// Generated accessor functions for zero-reflection field access
			GetValue: func(model interface{}) interface{} {
				m := model.(AuthCredential)
				return m.UpdatedAt
			},
		},
	},

	ColumnMap: map[string]string{
		"Id":          "id",
		"ProjectId":   "project_id",
		"Type":        "type",
		"Name":        "name",
		"Headers":     "headers",
		"ExpiresAt":   "expires_at",
		"Description": "description",
		"CreatedAt":   "created_at",
		"UpdatedAt":   "updated_at",
	},

	ReverseMap: map[string]string{
		"id":          "Id",
		"project_id":  "ProjectId",
		"type":        "Type",
		"name":        "Name",
		"headers":     "Headers",
		"expires_at":  "ExpiresAt",
		"description": "Description",
		"created_at":  "CreatedAt",
		"updated_at":  "UpdatedAt",
	},

	PrimaryKeys: []string{
		"id",
	},

	Relationships: map[string]*orm.RelationshipMetadata{
		"Project": {
			Name:       "Project",
			Type:       "belongs_to",
			Target:     "Project",
			ForeignKey: "project_id",
			TargetKey:  "id",

			// Generated accessor functions for relationships
			SetValue: func(model interface{}, value interface{}) {
				model.(*AuthCredential).Project = value.(*Project)
			},
			IsSlice: false,
		},
	},
}
