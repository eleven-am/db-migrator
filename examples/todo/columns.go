//go:build !exclude_generated
// +build !exclude_generated

// Code generated by storm orm generate-orm; DO NOT EDIT.
//
// This file was automatically generated from Go struct definitions.
// Any changes made to this file will be lost when regenerating.
//
// Source package: todo
// Models found: 7
// Generated on: 2025-07-17 01:02:48 CEST
//
// To regenerate this file, run:
//   storm orm generate-orm --package=todo
//
// For more information, see:
//   https://github.com/eleven-am/storm

package todo

import (
	"github.com/eleven-am/storm/pkg/storm"
	"time"
)

// Categorys provides type-safe column references for Category
var Categorys = struct {
	ID storm.StringColumn `json:"id"`

	UserID storm.StringColumn `json:"user_id"`

	Name storm.StringColumn `json:"name"`

	Color storm.StringColumn `json:"color"`

	Description storm.StringColumn `json:"description"`

	CreatedAt storm.TimeColumn `json:"created_at"`

	UpdatedAt storm.TimeColumn `json:"updated_at"`
}{

	ID: storm.StringColumn{Column: storm.Column[string]{Name: "id", Table: "categories"}},

	UserID: storm.StringColumn{Column: storm.Column[string]{Name: "user_id", Table: "categories"}},

	Name: storm.StringColumn{Column: storm.Column[string]{Name: "name", Table: "categories"}},

	Color: storm.StringColumn{Column: storm.Column[string]{Name: "color", Table: "categories"}},

	Description: storm.StringColumn{Column: storm.Column[string]{Name: "description", Table: "categories"}},

	CreatedAt: storm.TimeColumn{ComparableColumn: storm.ComparableColumn[time.Time]{Column: storm.Column[time.Time]{Name: "created_at", Table: "categories"}}},

	UpdatedAt: storm.TimeColumn{ComparableColumn: storm.ComparableColumn[time.Time]{Column: storm.Column[time.Time]{Name: "updated_at", Table: "categories"}}},
}

// CategoryTable provides table-level operations for Category
var CategoryTable = storm.Table{
	Name:        "categories",
	PrimaryKeys: []string{"id"},
}

// Comments provides type-safe column references for Comment
var Comments = struct {
	ID storm.StringColumn `json:"id"`

	TodoID storm.StringColumn `json:"todo_id"`

	UserID storm.StringColumn `json:"user_id"`

	Content storm.StringColumn `json:"content"`

	CreatedAt storm.TimeColumn `json:"created_at"`

	UpdatedAt storm.TimeColumn `json:"updated_at"`
}{

	ID: storm.StringColumn{Column: storm.Column[string]{Name: "id", Table: "comments"}},

	TodoID: storm.StringColumn{Column: storm.Column[string]{Name: "todo_id", Table: "comments"}},

	UserID: storm.StringColumn{Column: storm.Column[string]{Name: "user_id", Table: "comments"}},

	Content: storm.StringColumn{Column: storm.Column[string]{Name: "content", Table: "comments"}},

	CreatedAt: storm.TimeColumn{ComparableColumn: storm.ComparableColumn[time.Time]{Column: storm.Column[time.Time]{Name: "created_at", Table: "comments"}}},

	UpdatedAt: storm.TimeColumn{ComparableColumn: storm.ComparableColumn[time.Time]{Column: storm.Column[time.Time]{Name: "updated_at", Table: "comments"}}},
}

// CommentTable provides table-level operations for Comment
var CommentTable = storm.Table{
	Name:        "comments",
	PrimaryKeys: []string{"id"},
}

// Tags provides type-safe column references for Tag
var Tags = struct {
	ID storm.StringColumn `json:"id"`

	Name storm.StringColumn `json:"name"`

	Color storm.StringColumn `json:"color"`

	CreatedAt storm.TimeColumn `json:"created_at"`
}{

	ID: storm.StringColumn{Column: storm.Column[string]{Name: "id", Table: "tags"}},

	Name: storm.StringColumn{Column: storm.Column[string]{Name: "name", Table: "tags"}},

	Color: storm.StringColumn{Column: storm.Column[string]{Name: "color", Table: "tags"}},

	CreatedAt: storm.TimeColumn{ComparableColumn: storm.ComparableColumn[time.Time]{Column: storm.Column[time.Time]{Name: "created_at", Table: "tags"}}},
}

// TagTable provides table-level operations for Tag
var TagTable = storm.Table{
	Name:        "tags",
	PrimaryKeys: []string{"id"},
}

// Todos provides type-safe column references for Todo
var Todos = struct {
	ID storm.StringColumn `json:"id"`

	UserID storm.StringColumn `json:"user_id"`

	CategoryID storm.StringColumn `json:"category_id"`

	Title storm.StringColumn `json:"title"`

	Description storm.StringColumn `json:"description"`

	Status storm.Column[interface{}] `json:"status"`

	Priority storm.Column[interface{}] `json:"priority"`

	DueDate storm.TimeColumn `json:"due_date"`

	CompletedAt storm.TimeColumn `json:"completed_at"`

	CreatedAt storm.TimeColumn `json:"created_at"`

	UpdatedAt storm.TimeColumn `json:"updated_at"`
}{

	ID: storm.StringColumn{Column: storm.Column[string]{Name: "id", Table: "todos"}},

	UserID: storm.StringColumn{Column: storm.Column[string]{Name: "user_id", Table: "todos"}},

	CategoryID: storm.StringColumn{Column: storm.Column[string]{Name: "category_id", Table: "todos"}},

	Title: storm.StringColumn{Column: storm.Column[string]{Name: "title", Table: "todos"}},

	Description: storm.StringColumn{Column: storm.Column[string]{Name: "description", Table: "todos"}},

	Status: storm.Column[interface{}]{Name: "status", Table: "todos"},

	Priority: storm.Column[interface{}]{Name: "priority", Table: "todos"},

	DueDate: storm.TimeColumn{ComparableColumn: storm.ComparableColumn[time.Time]{Column: storm.Column[time.Time]{Name: "due_date", Table: "todos"}}},

	CompletedAt: storm.TimeColumn{ComparableColumn: storm.ComparableColumn[time.Time]{Column: storm.Column[time.Time]{Name: "completed_at", Table: "todos"}}},

	CreatedAt: storm.TimeColumn{ComparableColumn: storm.ComparableColumn[time.Time]{Column: storm.Column[time.Time]{Name: "created_at", Table: "todos"}}},

	UpdatedAt: storm.TimeColumn{ComparableColumn: storm.ComparableColumn[time.Time]{Column: storm.Column[time.Time]{Name: "updated_at", Table: "todos"}}},
}

// TodoTable provides table-level operations for Todo
var TodoTable = storm.Table{
	Name:        "todos",
	PrimaryKeys: []string{"id"},
}

// TodoTags provides type-safe column references for TodoTag
var TodoTags = struct {
	TodoID storm.StringColumn `json:"todo_id"`

	TagID storm.StringColumn `json:"tag_id"`

	CreatedAt storm.TimeColumn `json:"created_at"`
}{

	TodoID: storm.StringColumn{Column: storm.Column[string]{Name: "todo_id", Table: "todo_tags"}},

	TagID: storm.StringColumn{Column: storm.Column[string]{Name: "tag_id", Table: "todo_tags"}},

	CreatedAt: storm.TimeColumn{ComparableColumn: storm.ComparableColumn[time.Time]{Column: storm.Column[time.Time]{Name: "created_at", Table: "todo_tags"}}},
}

// TodoTagTable provides table-level operations for TodoTag
var TodoTagTable = storm.Table{
	Name:        "todo_tags",
	PrimaryKeys: []string{"todo_id", "tag_id"},
}

// Users provides type-safe column references for User
var Users = struct {
	ID storm.StringColumn `json:"id"`

	Email storm.StringColumn `json:"email"`

	Name storm.StringColumn `json:"name"`

	Password storm.StringColumn `json:"password_hash"`

	IsActive storm.BoolColumn `json:"is_active"`

	CreatedAt storm.TimeColumn `json:"created_at"`

	UpdatedAt storm.TimeColumn `json:"updated_at"`
}{

	ID: storm.StringColumn{Column: storm.Column[string]{Name: "id", Table: "users"}},

	Email: storm.StringColumn{Column: storm.Column[string]{Name: "email", Table: "users"}},

	Name: storm.StringColumn{Column: storm.Column[string]{Name: "name", Table: "users"}},

	Password: storm.StringColumn{Column: storm.Column[string]{Name: "password_hash", Table: "users"}},

	IsActive: storm.BoolColumn{Column: storm.Column[bool]{Name: "is_active", Table: "users"}},

	CreatedAt: storm.TimeColumn{ComparableColumn: storm.ComparableColumn[time.Time]{Column: storm.Column[time.Time]{Name: "created_at", Table: "users"}}},

	UpdatedAt: storm.TimeColumn{ComparableColumn: storm.ComparableColumn[time.Time]{Column: storm.Column[time.Time]{Name: "updated_at", Table: "users"}}},
}

// UserTable provides table-level operations for User
var UserTable = storm.Table{
	Name:        "users",
	PrimaryKeys: []string{"id"},
}

// UserTags provides type-safe column references for UserTag
var UserTags = struct {
	UserID storm.StringColumn `json:"user_id"`

	TagID storm.StringColumn `json:"tag_id"`

	CreatedAt storm.TimeColumn `json:"created_at"`
}{

	UserID: storm.StringColumn{Column: storm.Column[string]{Name: "user_id", Table: "user_tags"}},

	TagID: storm.StringColumn{Column: storm.Column[string]{Name: "tag_id", Table: "user_tags"}},

	CreatedAt: storm.TimeColumn{ComparableColumn: storm.ComparableColumn[time.Time]{Column: storm.Column[time.Time]{Name: "created_at", Table: "user_tags"}}},
}

// UserTagTable provides table-level operations for UserTag
var UserTagTable = storm.Table{
	Name:        "user_tags",
	PrimaryKeys: []string{"user_id", "tag_id"},
}
